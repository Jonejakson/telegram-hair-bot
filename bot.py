# -*- coding: utf-8 -*-
import telebot
from telebot import types
import requests
import re
import os
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = "8469042166:AAGTV250nbgUTHe14CVba66tFXSIwcEGG7o"
CHANNEL_USERNAME = "volosy_v_fokuse"
CHANNEL_CHAT_ID = -1002194057942
ADMIN_CHAT_ID = "680094245"

bot = telebot.TeleBot(BOT_TOKEN)
user_data = {}

def check_subscription(user_id):
    try:
        member = bot.get_chat_member(CHANNEL_CHAT_ID, user_id)
        return member.status in ['creator', 'administrator', 'member']
    except:
        return False

@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = message.from_user.id
    
    # –°–†–ê–ó–£ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–æ–∫
    send_file_immediately(message.chat.id, user_id)
    
    # –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
    time.sleep(2)
    offer_subscription(message.chat.id)

def send_file_immediately(chat_id, user_id):
    try:
        file_path = 'diagnostika_volosy.pdf'
        
        if not os.path.exists(file_path):
            bot.send_message(chat_id, "‚ùå –§–∞–π–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
            return
            
        with open(file_path, 'rb') as file:
            bot.send_document(
                chat_id, 
                file, 
                caption="üéÅ **–í–∞—à PDF-–≥–∏–¥ ¬´–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤–æ–ª–æ—Å¬ª**\n\n_–ò–∑—É—á–∞–π—Ç–µ –∏ –ø—Ä–∏–º–µ–Ω—è–π—Ç–µ! –¢–µ–ø–µ—Ä—å –≤—ã –∑–Ω–∞–µ—Ç–µ –æ –≤–æ–ª–æ—Å–∞—Ö –±–æ–ª—å—à–µ, —á–µ–º 90% –ª—é–¥–µ–π_ ‚ú®",
                parse_mode='Markdown'
            )
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
        user_info = {
            'username': f"@{user_id}" if not user_id else str(user_id),
            'first_name': user_id if user_id else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        }
        
        try:
            admin_message = f"üì• –ù–æ–≤—ã–π —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ!\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info['first_name']}\nüÜî ID: {user_id}"
            bot.send_message(ADMIN_CHAT_ID, admin_message)
        except Exception as admin_error:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É: {admin_error}")
            
    except Exception as e:
        bot.send_message(chat_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞.")
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞: {e}")

def offer_subscription(chat_id):
    markup = types.InlineKeyboardMarkup()
    subscribe_btn = types.InlineKeyboardButton(
        "üåü –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", 
        url="https://t.me/+fOyv1FQvih4wNGY6"  # –í–∞—à–∞ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞
    )
    already_btn = types.InlineKeyboardButton(
        "‚úÖ –Ø —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω", 
        callback_data="already_subscribed"
    )
    markup.add(subscribe_btn)
    markup.add(already_btn)
    
    subscription_text = """üí´ **–ü–æ–Ω—Ä–∞–≤–∏–ª—Å—è –≥–∞–π–¥?**

–í –º–æ–µ–º –∫–∞–Ω–∞–ª–µ **¬´–í–æ–ª–æ—Å—ã –≤ —Ñ–æ–∫—É—Å–µ¬ª** —è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–µ–ª—é—Å—å:

‚Ä¢ üß™ –†–∞–∑–±–æ—Ä–∞–º–∏ —Å–æ—Å—Ç–∞–≤–æ–≤ –∫–æ—Å–º–µ—Ç–∏–∫–∏
‚Ä¢ üí° –õ–∞–π—Ñ—Ö–∞–∫–∞–º–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –≤–æ–ª–æ—Å  
‚Ä¢ üîé –ê–Ω–∞–ª–∏–∑–æ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤
‚Ä¢ üìö –°–∏—Å—Ç–µ–º–æ–π —É—Ö–æ–¥–∞, –∫–æ—Ç–æ—Ä–∞—è —Ä–µ–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç

**–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å ‚Äî —Ç–∞–º –µ—â–µ –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ!** üëá"""
    
    bot.send_message(
        chat_id,
        subscription_text,
        reply_markup=markup,
        parse_mode='Markdown'
    )

@bot.callback_query_handler(func=lambda call: call.data == "already_subscribed")
def handle_already_subscribed(call):
    user_id = call.from_user.id
    
    if check_subscription(user_id):
        bot.edit_message_text(
            "üéâ **–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!**\n\n–†–∞–¥–∞, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏! –í –∫–∞–Ω–∞–ª–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∂–¥—É—Ç –Ω–æ–≤—ã–µ –ø–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã üí´",
            call.message.chat.id,
            call.message.message_id,
            parse_mode='Markdown'
        )
    else:
        bot.answer_callback_query(
            call.id, 
            "ü§î –ù–µ –≤–∏–∂—É –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏... –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –∏ –Ω–∞–∂–∞—Ç—å —Å–Ω–æ–≤–∞", 
            show_alert=False
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
@bot.message_handler(func=lambda message: message.text and '–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è' in message.text.lower())
def handle_consultation(message):
    consultation_text = """üíé **–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è**

–î–∞–≤–∞–π—Ç–µ —Å–æ—Å—Ç–∞–≤–∏–º —Å–∏—Å—Ç–µ–º—É —É—Ö–æ–¥–∞ –∏–º–µ–Ω–Ω–æ –¥–ª—è –í–ê–®–ò–• –≤–æ–ª–æ—Å!

–ó–∞ 30 –º–∏–Ω—É—Ç –º—ã:
‚Ä¢ –ü—Ä–æ–≤–µ–¥–µ–º –ø–æ–ª–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
‚Ä¢ –†–∞–∑–±–µ—Ä–µ–º —Ç–µ–∫—É—â–∏–π —É—Ö–æ–¥ –∏ –Ω–∞–π–¥–µ–º –æ—à–∏–±–∫–∏  
‚Ä¢ –ü–æ–¥–±–µ—Ä–µ–º –∫–æ—Å–º–µ—Ç–∏–∫—É –ø–æ–¥ –≤–∞—à —Ç–∏–ø –∏ –±—é–¥–∂–µ—Ç
‚Ä¢ –°–æ—Å—Ç–∞–≤–∏–º –ø–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π

üí¨ **–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:** @belka1233

–£–∫–∞–∂–∏—Ç–µ ¬´–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∏–∑ –±–æ—Ç–∞¬ª –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ ‚ú®"""
    
    bot.send_message(
        message.chat.id,
        consultation_text,
        parse_mode='Markdown'
    )

if __name__ == "__main__":
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –ø–æ –Ω–æ–≤–æ–π —Å—Ö–µ–º–µ!")
    while True:
        try:
            bot.polling(none_stop=True, timeout=60)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
            time.sleep(10)